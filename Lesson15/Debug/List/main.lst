###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.2.11706/W32 for ARM       11/Jan/2018  15:11:46
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Embedded_Program\Lesson15\main.c
#    Command line =  
#        C:\Embedded_Program\Lesson15\main.c -lc
#        C:\Embedded_Program\Lesson15\Debug\List -o
#        C:\Embedded_Program\Lesson15\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -Ol -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  C:\Embedded_Program\Lesson15\Debug\List\main.lst
#    Object file  =  C:\Embedded_Program\Lesson15\Debug\Obj\main.o
#
###############################################################################

C:\Embedded_Program\Lesson15\main.c
      1          #include <stdint.h>
      2          
      3          #include "tm4c_cmsis.h"
      4          #include "delay.h"
      5          
      6          #define LED_RED   (1U << 1)
      7          #define LED_BLUE  (1U << 2)
      8          #define LED_GREEN (1U << 3)
      9          
     10          
     11          typedef __packed struct {
     12              uint8_t y;
     13              uint16_t x;
     14          } Point;
     15          
     16          Point p2;
     17          Point p1={0x55u,0x1234u};
     18          
     19          typedef struct {
     20              Point top_left;
     21              Point bottom_right;
     22          } Window;
     23          
     24          typedef struct {
     25               Point corners[3];
     26          } Triangle;
     27          
     28          
     29          
     30          int main() {
     31          Point *PP;
     32          PP=&p1;
     33          PP->y=0u;
     34          PP->x=2u;
     35          p2.x=3u;
     36          p2.y=4u;
     37              SYSCTL->RCGC2 |= (1U << 5);  /* enable clock for GPIOF */
     38              SYSCTL->GPIOHSCTL |= (1U << 5); /* enable AHB for GPIOF */
     39              GPIOF_HS->DIR |= (LED_RED | LED_BLUE | LED_GREEN);
     40              GPIOF_HS->DEN |= (LED_RED | LED_BLUE | LED_GREEN);
     41          
     42              GPIOF_HS->DATA_Bits[LED_BLUE] = LED_BLUE;
     43              while (1) {
     44                  GPIOF_HS->DATA_Bits[LED_RED] = LED_RED;
     45                  delay(500000);
     46                  
     47                  GPIOF_HS->DATA_Bits[LED_RED] = 0;
     48          
     49                  delay(500000);
     50              }
     51              //return 0;
     52          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     144  main
       4  p1
       4  p2

 
   4 bytes in section .bss
   4 bytes in section .data
 144 bytes in section .text
 
 144 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
